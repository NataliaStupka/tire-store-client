import { ErrorMessage, Field, Formik, Form } from "formik";
import s from "./SearchBar.module.css";
import clsx from "clsx";
import { useDispatch, useSelector } from "react-redux";
import { selectAllTires } from "../../redux/tire/selectors";
import { useCallback, useEffect } from "react";
import { fetchAllTires } from "../../redux/tire/operations";
import { fetchTiresBySize } from "../../redux/filter/operations";
import { selectTiresBySize } from "../../redux/filter/selectors";
import debounce from "lodash.debounce";
import { changeFilter } from "../../redux/filter/slice";

export const SearchBar = ({ onSizeChange }) => {
  const dispatch = useDispatch();

  //–ø–æ—à—É–∫ –ø—Ä–∏ –≤–µ–¥–µ–Ω–Ω—ñ —Å–∏–º–≤–æ–ª—ñ–≤
  const handleSearch = useCallback(
    debounce((size, category) => {
      if (size || category) {
        console.log("üü¢ Searching for size+category:", size, category);
        dispatch(fetchTiresBySize({ size, category }));

        if (onSizeChange) onSizeChange(size); // –í–∏–∫–ª–∏–∫–∞—î–º–æ –∫–æ–ª–±–µ–∫ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ size
      }
    }, 500), // –ó–∞—Ç—Ä–∏–º–∫–∞ 500 –º—Å
    [dispatch, onSizeChange]
  );

  const handleReset = () => {
    console.log("–°–∫–∏–¥—É—î–º–æ —Ñ—ñ–ª—å—Ç—Ä");
    dispatch(changeFilter());
  };

  const initialValues = {
    size: "", // –ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –ø–æ–ª—è
    category: "",
  };

  return (
    <div className="container">
      <h2 className={s.filterText}>–ü–æ—à—É–∫ –ø–æ —Ä–æ–∑–º—ñ—Ä—É.</h2>
      <Formik
        // onSubmit={handleSubmit} //—è–∫—â–æ –ø–æ—à—É–∫ –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
        initialValues={initialValues}
        // validationSchema={validationSchema}
      >
        {/* ({ resetForm }) */}
        {({ values, setFieldValue, resetForm }) => (
          <Form className={s.form}>
            <div className={s.group}>
              <label className={s.label}>
                <Field
                  type="text"
                  name="size"
                  className={s.searchInput}
                  placeholder="–í–≤–µ–¥—ñ—Ç—å —Ä–æ–∑–º—ñ—Ä"
                  aria-label="–ü–æ—à—É–∫ —à–∏–Ω –∑–∞ —Ä–æ–∑–º—ñ—Ä–æ–º"
                  autoComplete="off" // –í—ñ–¥–∫–ª—é—á–∞—î –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è
                  onChange={(e) => {
                    const size = e.target.value;
                    setFieldValue("size", size); // –û–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ Formik
                    handleSearch(size, values.category); //–≤–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ—à—É–∫
                  }}
                />
              </label>
              <ErrorMessage name="size" component="div" className={s.error} />

              <label className={s.label}>
                <Field
                  // type="text"
                  as="select"
                  name="category"
                  className={s.searchInput}
                  placeholder="–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é"
                  aria-label="–ü–æ—à—É–∫ –∑–∞
                  –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é"
                  onChange={(e) => {
                    const category = e.target.value;
                    setFieldValue("category", category); // –û–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ Formik
                    handleSearch(values.size, category); //–≤–∏–∫–ª–∏–∫–∞—î–º–æ –ø–æ—à—É–∫
                  }}
                >
                  <option disabled value="">
                    –û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:
                  </option>
                  <option value="tire">–®–∏–Ω–∏</option>
                  <option value="rims">–î–∏—Å–∫–∏</option>
                </Field>
              </label>
            </div>

            {/* <button type="submit" className={clsx("button", s.btnSearch)}>
              –ü–æ—à—É–∫
            </button> */}

            <button
              type="button"
              onClick={(e) => {
                handleReset();
                // setFieldValue("size", ""); // –°–∫–∏–¥–∞—î–º–æ –ø–æ–ª–µ
                // setFieldValue("category", "");
                resetForm(); // —Å–∫–∏–¥–∞—î –≤—Å—ñ –ø–æ–ª—è
                if (onSizeChange) onSizeChange(""); // –æ—á–∏—Å—Ç–∏—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
              }}
              className={clsx("button", s.btnReset)}
            >
              –°–∫–∏–¥–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—É
            </button>
          </Form>
        )}
      </Formik>
    </div>
  );
};
